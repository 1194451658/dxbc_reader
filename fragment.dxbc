//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer CBUSE_UB_CAMERA_IDX
// {
//
//   float3 u_eyePos;                   // Offset:    0 Size:    12 [unused]
//   float3 u_eyeDir;                   // Offset:   16 Size:    12 [unused]
//   float3 u_eyeUpDir;                 // Offset:   32 Size:    12 [unused]
//   float4 u_depthLinear;              // Offset:   48 Size:    16 [unused]
//   float4 u_eyeNearFarInvAspect;      // Offset:   64 Size:    16
//   row_major float3x4 u_mtxEyeSphere; // Offset:   80 Size:    48 [unused]
//   float4 u_shadowSampleParams;       // Offset:  128 Size:    16 [unused]
//   float4 u_pointLightRWParam;        // Offset:  144 Size:    16 [unused]
//   float3 u_RayleighColorP20;         // Offset:  160 Size:    12 [unused]
//   float3 u_RayleighColorP10;         // Offset:  176 Size:    12 [unused]
//   float3 u_RayleighColorO00;         // Offset:  192 Size:    12 [unused]
//   float3 u_RayleighColorM10;         // Offset:  208 Size:    12 [unused]
//   float3 u_RayleighColorM20;         // Offset:  224 Size:    12 [unused]
//   float3 u_HeightRayleighColor;      // Offset:  240 Size:    12 [unused]
//   float3 u_MieColorP20;              // Offset:  256 Size:    12 [unused]
//   float3 u_MieColorO00;              // Offset:  272 Size:    12 [unused]
//   float3 u_MieColorM20;              // Offset:  288 Size:    12 [unused]
//   float4 u_fogWorldParam0;           // Offset:  304 Size:    16 [unused]
//   float4 u_fogWorldParam1;           // Offset:  320 Size:    16 [unused]
//   float4 u_fogHeightParam0;          // Offset:  336 Size:    16 [unused]
//   float4 u_fogHeightParam1;          // Offset:  352 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// _inTex0Sampler                    sampler      NA          NA             s0      1
// _inTexDepthSampler                sampler      NA          NA            s13      1
// _inTex0                           texture  float4          2d             t0      1
// _inTexDepth                       texture  float4          2d            t13      1
// CBUSE_UB_CAMERA_IDX               cbuffer      NA          NA            cb8      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// TEXCOORD                 5   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 6   xyzw        3     NONE   float   xyzw
// TEXCOORD                 9   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB8[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s13, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t13
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 2
add r0.x, -cb8[4].x, cb8[4].y
div r1.xyz, v4.xyzx, v4.wwww
sample_indexable(texture2d)(float,float,float,float) r1.w, r1.xyxx, t13.yzwx, s13
add r0.y, cb8[4].x, cb8[4].y
mad r0.xy, r1.wzww, r0.xxxx, -r0.yyyy
dp2 r0.z, cb8[4].yyyy, cb8[4].xxxx
div r0.xy, r0.zzzz, r0.xyxx
add r0.x, r0.y, -r0.x
max r0.x, r0.x, l(0.000000)
add r0.y, -v3.w, v3.z
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0
mad r0.y, r1.w, r0.y, v3.w
div_sat r0.x, r0.x, r0.y
add r0.x, r0.x, l(-1.000000)
mad r0.x, v3.y, r0.x, l(1.000000)
mul r1.w, r0.x, r1.w
mul r0.xyzw, r1.xyzw, v1.xyzw
mad r1.x, r1.w, v1.w, -v3.x
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
mov o0.xyzw, r0.xyzw
ret
// Approximately 22 instruction slots used
