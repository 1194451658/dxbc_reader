1	r0.y = Batch.cShadowBias.w
mov r0.y, cb0[6].w
2	r0.x = 0
mov r0.x, l(0)
3	r1.xyz = in.TEXCOORD8.xyz/in.TEXCOORD8.www
div r1.xyz, v8.xyzx, v8.wwww
4	r0.zw = r1.xy/Batch.cShadowBias.ww
div r0.zw, r1.xxxy, cb0[6].wwww
5	r0.zw = r0.zw+float4(0.0,0.0,-0.5,-0.5)
add r0.zw, r0.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
6	r0.zw = frac(r0.zw)
frc r0.zw, r0.zzzw
7	r2.xy = r0.zw+float4(-0.5,-0.5,0.0,0.0)
add r2.xy, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
8	r2.xy = -r2.xy*Batch.cShadowBias.ww+r1.xy
mad r2.xy, -r2.xyxx, cb0[6].wwww, r1.xyxx
9	r3.xyzw = r0.yxxy+r2.xyxy
add r3.xyzw, r0.yxxy, r2.xyxy
10	r2.x = tex2D(tShadowMap, r2.xy).x //sample_state sShadowMapSampler
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t7.xyzw, s7
11	r0.xy = r0.xy+r3.xy
add r0.xy, r0.xyxx, r3.xyxx
12	r2.w = tex2D(tShadowMap, r0.xy).x //sample_state sShadowMapSampler
sample_indexable(texture2d)(float,float,float,float) r2.w, r0.xyxx, t7.yzwx, s7
13	r2.y = tex2D(tShadowMap, r3.xy).x //sample_state sShadowMapSampler
sample_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t7.yxzw, s7
14	r2.z = tex2D(tShadowMap, r3.zw).x //sample_state sShadowMapSampler
sample_indexable(texture2d)(float,float,float,float) r2.z, r3.zwzz, t7.yzxw, s7
15	r0.x = min(r1.z, 0.99999)
min r0.x, r1.z, l(0.999990)
16	r1.xy = r1.xy+float4(-0.5,-0.5,0.0,0.0)
add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
17	r1.xy = -abs(r1.xy)+float4(0.5,0.5,0.0,0.0)
add r1.xy, -|r1.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
18	r0.y = min(r1.y, r1.x)
min r0.y, r1.y, r1.x
19	r1.xyzw = r2.xyzw < r0.xxxx
lt r1.xyzw, r2.xyzw, r0.xxxx
20	r2.xy=r1.xz?float4(-1.0,-1.0,0,0):float4(-0.0,-0.0,0,0)
movc r2.xy, r1.xzxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
21	r1.xyzw = r1.xyzw&float4(0x3f800000,0x3f800000,0x3f800000,0x3f800000)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
22	r1.yw = r2.xy+r1.yw
add r1.yw, r2.xxxy, r1.yyyw
23	r0.xz = r0.zz*r1.yw+r1.xz
mad r0.xz, r0.zzzz, r1.yywy, r1.xxzx
24	r0.z = -r0.x+r0.z
add r0.z, -r0.x, r0.z
25	r0.x = r0.w*r0.z+r0.x
mad r0.x, r0.w, r0.z, r0.x
26	r0.z = in.TEXCOORD2.w+GlobalPS.Misc.y
add r0.z, v2.w, cb3[11].y
27	r0.z = r0.z*0.45
mul r0.z, r0.z, l(0.450000)
28	r0.w = dot(in.TEXCOORD4.x, in.TEXCOORD4.x)
dp3 r0.w, v4.xyzx, v4.xyzx
29	r0.w = sqrt(r0.w)
sqrt r0.w, r0.w
30	r0.z = r0.w/r0.z
div r0.z, r0.w, r0.z
31	r0.w = r0.w/Batch.cParamter.w
div r0.w, r0.w, cb0[13].w
32	r0.zw = -r0.zw+float4(0.0,0.0,3.0,1.0)
add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 3.000000, 1.000000)
33	r0.yw = saturate(r0.yw*float4(0.0,10.0,0.0,3.333333))
mul_sat r0.yw, r0.yyyw, l(0.000000, 10.000000, 0.000000, 3.333333)
34	r0.z = max(r0.z, 0.6)
max r0.z, r0.z, l(0.600000)
35	r0.z = min(r0.z, 1.0)
min r0.z, r0.z, l(1.000000)
36	r1.xyzw = tex2D(tLightMap, in.TEXCOORD1.zw).xyzw //sample_state sLightMapSampler
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.zwzz, t5.xyzw, s5
37	r1.w = max(r1.w, 0.0)
max r1.w, r1.w, l(0.000000)
38	r1.xyz = r1.xyz*r1.xyz
mul r1.xyz, r1.xyzx, r1.xyzx
39	r1.xyz = r1.xyz*Shader.cLightMapScale.xyz
mul r1.xyz, r1.xyzx, cb1[5].xyzx
40	r1.xyz = r1.xyz*GlobalPS.AmbientColor.www+in.TEXCOORD5.xyz
mad r1.xyz, r1.xyzx, cb3[5].wwww, v5.xyzx
41	r0.x = -r1.w*r0.z+r0.x
mad r0.x, -r1.w, r0.z, r0.x
42	r0.z = r0.z*r1.w
mul r0.z, r0.z, r1.w
43	r0.x = r0.y*r0.x+r0.z
mad r0.x, r0.y, r0.x, r0.z
44	r0.x = min(r0.x, 1.0)
min r0.x, r0.x, l(1.000000)
45	r0.x = -r0.x*GlobalPS.ShadowColor.w+1.0
mad r0.x, -r0.x, cb3[7].w, l(1.000000)
46	r0.yz = in.TEXCOORD1.xy*Shader.cOverlayMapUVTransform.xy+Shader.cOverlayMapUVTransform.zw
mad r0.yz, v1.xxyx, cb1[7].xxyx, cb1[7].zzwz
47	r2.xyz = tex2D(tMixtureMap, r0.yz).xyz //sample_state sMixtureMapSampler
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.yzyy, t1.xyzw, s1
48	r3.xyz = tex2D(tOverlayMap, r0.yz).xyz //sample_state sOverlayMapSampler
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.yzyy, t8.xyzw, s8
49	r0.y = r2.z+r2.z
add r0.y, r2.z, r2.z
50	r0.y = frac(r0.y)
frc r0.y, r0.y
51	r0.y = r0.y >= 0.5
ge r0.y, r0.y, l(0.500000)
52	r0.y = r0.y&0x3f000000
and r0.y, r0.y, l(0x3f000000)
53	r4.x = in.TEXCOORD6.w
mov r4.x, v6.w
54	r4.y = in.TEXCOORD7.w
mov r4.y, v7.w
55	r4.xy = Shader.cBlockScale.xx*in.TEXCOORD4.xz+r4.xy
mad r4.xy, cb1[3].xxxx, v4.xzxx, r4.xyxx
56	r4.zw = frac(r4.xy)
frc r4.zw, r4.xxxy
57	r5.xy = Shader.cBlockShrinkage.yy*r4.zw+Shader.cBlockShrinkage.xx
mad r5.xy, cb1[4].yyyy, r4.zwzz, cb1[4].xxxx
58	r6.y = r0.y+r5.x
add r6.y, r0.y, r5.x
59	r7.xyz = r2.zxyz >= float4(0.5,0.5,0.5,0.0)
ge r7.xyz, r2.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000)
60	r0.yz = r2.xy+float4(0.0,-0.5,-0.5,0.0)
add r0.yz, r2.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
61	r0.yz = abs(r0.yz)*float4(0.0,3.0,3.0,0.0)+float4(0.0,-0.45,-0.45,0.0)
mad r0.yz, |r0.yyzy|, l(0.000000, 3.000000, 3.000000, 0.000000), l(0.000000, -0.450000, -0.450000, 0.000000)
62	r0.yz = max(r0.yyzy, float4(0.0,0.0,0.0,0.0))
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
63	r2.xyz = r7.xyzx&float4(0x3f000000,0x3f000000,0x3f000000,0)
and r2.xyz, r7.xyzx, l(0x3f000000, 0x3f000000, 0x3f000000, 0)
64	r6.xzw = r2.zxy+r5.xyx
add r6.xzw, r2.zzxy, r5.xxyx
65	r2.xy=ddx_coarse(r4.xy)
deriv_rtx_coarse r2.xy, r4.xyxx
66	r2.zw=ddy_coarse(r4.xy)
deriv_rty_coarse r2.zw, r4.xxxy
67	r2.xyzw = abs(r2.xyzw)*Shader.cBlockShrinkage.yyyy
mul r2.xyzw, |r2.xyzw|, cb1[4].yyyy
68	r2.xyzw = min(r2.xyzw, Shader.cBlockShrinkage.wwww)
min r2.xyzw, r2.xyzw, cb1[4].wwww
69	r1.w = r0.w*-0.975+1.6
mad r1.w, r0.w, l(-0.975000), l(1.600000)
70	r2.xyzw = r1.wwww*r2.xyzw
mul r2.xyzw, r1.wwww, r2.xyzw
71	r4.xyzw = tex2D(tNormalMap, r6.yz).xyzw //sample_state sNormalMapSampler
sample_d_indexable(texture2d)(float,float,float,float) r4.xyzw, r6.yzyy, t4.xyzw, s4, r2.xyxx, r2.zwzz
72	r5.xw = -r0.yz*r0.ww+r4.ww
mad r5.xw, -r0.yyyz, r0.wwww, r4.wwww
73	r5.xw = r5.xw+float4(1.0,0.0,0.0,1.0)
add r5.xw, r5.xxxw, l(1.000000, 0.000000, 0.000000, 1.000000)
74	r5.z = r6.w
mov r5.z, r6.w
75	r7.xyz = tex2D(tAuxiliaryMap, r5.zy).xyz //sample_state sAuxiliaryMapSampler
sample_d_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zyzz, t9.xyzw, s9, r2.xyxx, r2.zwzz
76	r8.xyz = tex2D(tBlockMap, r5.zy).xyz //sample_state sBlockMapSampler
sample_d_indexable(texture2d)(float,float,float,float) r8.xyz, r5.zyzz, t2.xyzw, s2, r2.xyxx, r2.zwzz
77	r6.y = r5.y+0.5
add r6.y, r5.y, l(0.500000)
78	r1.w = r0.y*r0.w+r7.z
mad r1.w, r0.y, r0.w, r7.z
79	r7.xyz = -r4.xyw+r7.xyz
add r7.xyz, -r4.xywx, r7.xyzx
80	r1.w = r1.w >= r5.x
ge r1.w, r1.w, r5.x
81	r1.w = r1.w&0x3f800000
and r1.w, r1.w, l(0x3f800000)
82	r1.w = -r0.y*r0.w+r1.w
mad r1.w, -r0.y, r0.w, r1.w
83	r5.xy = r0.ww*r0.yz
mul r5.xy, r0.wwww, r0.yzyy
84	r0.y = Shader.cBlendSharpness.x*r1.w+r5.x
mad r0.y, cb1[2].x, r1.w, r5.x
85	r4.xyw = r0.yyy*r7.xyz+r4.xyw
mad r4.xyw, r0.yyyy, r7.xyxz, r4.xyxw
86	r3.xyz = r3.xyz*r4.zzz
mul r3.xyz, r3.xyzx, r4.zzzz
87	r7.xyz = tex2D(tAuxiliaryMap, r6.xy).xyz //sample_state sAuxiliaryMapSampler
sample_d_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t9.xyzw, s9, r2.xyxx, r2.zwzz
88	r2.xyz = tex2D(tBlockMap, r6.xy).xyz //sample_state sBlockMapSampler
sample_d_indexable(texture2d)(float,float,float,float) r2.xyz, r6.xyxx, t2.xyzw, s2, r2.xyxx, r2.zwzz
89	r6.xyz = -r4.xyw+r7.xyz
add r6.xyz, -r4.xywx, r7.xyzx
90	r1.w = r0.z*r0.w+r7.z
mad r1.w, r0.z, r0.w, r7.z
91	r1.w = r1.w >= r5.w
ge r1.w, r1.w, r5.w
92	r1.w = r1.w&0x3f800000
and r1.w, r1.w, l(0x3f800000)
93	r0.z = -r0.z*r0.w+r1.w
mad r0.z, -r0.z, r0.w, r1.w
94	r0.z = Shader.cBlendSharpness.x*r0.z+r5.y
mad r0.z, cb1[2].x, r0.z, r5.y
95	r4.xyz = r0.zzz*r6.xyz+r4.xyw
mad r4.xyz, r0.zzzz, r6.xyzx, r4.xywx
96	r4.xy = r4.xy*float4(2.0,2.0,0.0,0.0)+float4(-1.0,-1.0,0.0,0.0)
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
97	r1.w = r4.z-1.0
add r1.w, r4.z, l(-1.000000)
98	r1.w = r0.w*r1.w+1.0
mad r1.w, r0.w, r1.w, l(1.000000)
99	r1.w = max(r1.w, 0.08)
max r1.w, r1.w, l(0.080000)
100	r1.w = r1.w*r1.w
mul r1.w, r1.w, r1.w
101	r1.w = r1.w*r1.w
mul r1.w, r1.w, r1.w
102	r4.xzw = r4.xxx*in.TEXCOORD6.xyz+in.TEXCOORD3.xyz
mad r4.xzw, r4.xxxx, v6.xxyz, v3.xxyz
103	r4.xyz = r4.yyy*in.TEXCOORD7.xyz+r4.xzw
mad r4.xyz, r4.yyyy, v7.xyzx, r4.xzwx
104	r2.w = dot(r4.x, r4.x)
dp3 r2.w, r4.xyzx, r4.xyzx
105	r2.w = rsqrt(r2.w)
rsq r2.w, r2.w
106	r4.xyz = r2.www*r4.xyz
mul r4.xyz, r2.wwww, r4.xyzx
107	r2.w = saturate(dot(r4.x, GlobalPS.SunDirection.x))
dp3_sat r2.w, r4.xyzx, cb3[4].xyzx
108	r5.xyz = r2.www*GlobalPS.SunColor.xyz
mul r5.xyz, r2.wwww, cb3[3].xyzx
109	r5.xyz = r5.xyz*r0.xxx+GlobalPS.AmbientColor.xyz
mad r5.xyz, r5.xyzx, r0.xxxx, cb3[5].xyzx
110	r6.xyz = r0.www*r5.xyz
mul r6.xyz, r0.wwww, r5.xyzx
111	r1.xyz = r1.xyz+r5.xyz
add r1.xyz, r1.xyzx, r5.xyzx
112	r0.x = dot(-in.TEXCOORD4.x, -in.TEXCOORD4.x)
dp3 r0.x, -v4.xyzx, -v4.xyzx
113	r0.x = rsqrt(r0.x)
rsq r0.x, r0.x
114	r5.xyz = -in.TEXCOORD4.xyz*r0.xxx+GlobalPS.SunDirection.xyz
mad r5.xyz, -v4.xyzx, r0.xxxx, cb3[4].xyzx
115	r0.x = dot(r5.x, r5.x)
dp3 r0.x, r5.xyzx, r5.xyzx
116	r0.x = rsqrt(r0.x)
rsq r0.x, r0.x
117	r5.xyz = r0.xxx*r5.xyz
mul r5.xyz, r0.xxxx, r5.xyzx
118	r0.x = saturate(dot(r4.x, r5.x))
dp3_sat r0.x, r4.xyzx, r5.xyzx
119	r2.w = r0.x*r1.w-r0.x
mad r2.w, r0.x, r1.w, -r0.x
120	r0.x = r2.w*r0.x+1.0
mad r0.x, r2.w, r0.x, l(1.000000)
121	r0.x = r0.x*r0.x
mul r0.x, r0.x, r0.x
122	r0.x = r0.x*3.141593
mul r0.x, r0.x, l(3.141593)
123	r0.x = r1.w/r0.x
div r0.x, r1.w, r0.x
124	r0.x = r0.x*0.016
mul r0.x, r0.x, l(0.016000)
125	r4.xyz = r0.xxx*r6.xyz
mul r4.xyz, r0.xxxx, r6.xyzx
126	r5.xyz = -r3.xyz*float4(1.8,1.8,1.8,0.0)+r8.xyz
mad r5.xyz, -r3.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000), r8.xyzx
127	r6.xyz = r3.xyz*float4(1.8,1.8,1.8,0.0)
mul r6.xyz, r3.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000)
128	r5.xyz = r0.yyy*r5.xyz+r6.xyz
mad r5.xyz, r0.yyyy, r5.xyzx, r6.xyzx
129	r2.xyz = r2.xyz-r5.xyz
add r2.xyz, r2.xyzx, -r5.xyzx
130	r0.xyz = r0.zzz*r2.xyz+r5.xyz
mad r0.xyz, r0.zzzz, r2.xyzx, r5.xyzx
131	r0.xyz = -r3.xyz*float4(1.8,1.8,1.8,0.0)+r0.xyz
mad r0.xyz, -r3.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000), r0.xyzx
132	r0.xyz = r0.www*r0.xyz+r6.xyz
mad r0.xyz, r0.wwww, r0.xyzx, r6.xyzx
133	r0.xyz = r0.xyz*r0.xyz
mul r0.xyz, r0.xyzx, r0.xyzx
134	r0.xyz = r0.xyz*float4(0.31831,0.31831,0.31831,0.0)
mul r0.xyz, r0.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
135	r0.xyz = r1.xyz*r0.xyz+r4.xyz
mad r0.xyz, r1.xyzx, r0.xyzx, r4.xyzx
136	r0.w = dot(r4.x, float4(0.6378,2.1456,1.0,0.0))
dp3 r0.w, r4.xyzx, l(0.637800, 2.145600, 1.000000, 0.000000)
137	r0.w = r0.w*Shader.cBloomScale.x
mul r0.w, r0.w, cb1[1].x
138	r0.w = r0.w >= 1.0
ge r0.w, r0.w, l(1.000000)
139	out.SV_Target.w = r0.w&0x3f800000
and o0.w, r0.w, l(0x3f800000)
140	r0.xyz = r0.xyz*GlobalPS.EnvInfo.zzz-GlobalPS.FogColor.xyz
mad r0.xyz, r0.xyzx, cb3[2].zzzz, -cb3[6].xyzx
141	r0.xyz = in.TEXCOORD5.www*r0.xyz+GlobalPS.FogColor.xyz
mad r0.xyz, v5.wwww, r0.xyzx, cb3[6].xyzx
142	r1.xyz = -r0.xyz+GlobalPS.ScreenColor.xyz
add r1.xyz, -r0.xyzx, cb3[8].xyzx
143	r0.xyz = GlobalPS.ScreenColor.www*r1.xyz+r0.xyz
mad r0.xyz, cb3[8].wwww, r1.xyzx, r0.xyzx
144	out.SV_Target.xyz = min(r0.xyzx, float4(8.0,8.0,8.0,0.0))
min o0.xyz, r0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
145	return out
ret