//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer CBUSE_UB_LOCAL_MATRIX_IDX
// {
//
//   row_major float4x4 u_mtxLW;        // Offset:    0 Size:    64 [unused]
//   row_major float4x4 u_mtxLV;        // Offset:   64 Size:    64 [unused]
//   row_major float4x4 u_mtxLP;        // Offset:  128 Size:    64
//   row_major float4x4 u_mtxLWOld;     // Offset:  192 Size:    64 [unused]
//   row_major float4x4 u_mtxLVOld;     // Offset:  256 Size:    64 [unused]
//
// }
//
// cbuffer CBUSE_UB_MODEL_MATERIAL_IDX
// {
//
//   float2 u_symFlag;                  // Offset:    0 Size:     8 [unused]
//   int u_meshId;                      // Offset:    8 Size:     4 [unused]
//   float u_alphaTestRef;              // Offset:   12 Size:     4
//   float4 u_diffuse;                  // Offset:   16 Size:    16
//   float4 u_ambient;                  // Offset:   32 Size:    16
//   float4 u_speculer;                 // Offset:   48 Size:    16 [unused]
//   row_major float2x3 u_texProj[6];   // Offset:   64 Size:   188
//   float4 u_uvRange[6];               // Offset:  256 Size:    96 [unused]
//
// }
//
// cbuffer CBUSE_UB_SHADER_PARAM_IDX
// {
//
//   float4 u_shaderParam0;             // Offset:    0 Size:    16
//   float4 u_shaderParam1;             // Offset:   16 Size:    16 [unused]
//   float4 u_shaderParam2;             // Offset:   32 Size:    16 [unused]
//   float4 u_shaderParam3;             // Offset:   48 Size:    16 [unused]
//   float4 u_shaderParam4;             // Offset:   64 Size:    16 [unused]
//   float4 u_shaderParam5;             // Offset:   80 Size:    16 [unused]
//   float4 u_shaderParam6;             // Offset:   96 Size:    16 [unused]
//   float4 u_shaderParam7;             // Offset:  112 Size:    16 [unused]
//
// }
//
// cbuffer CBUSE_UB_LIGHT_IDX
// {
//
//   float3 u_mapAmbient;               // Offset:    0 Size:    12 [unused]
//   float3 u_shadowColor;              // Offset:   16 Size:    12 [unused]
//   float3 u_lightDir;                 // Offset:   32 Size:    12 [unused]
//   float3 u_lightHalfDir;             // Offset:   48 Size:    12 [unused]
//   float3 u_lightColor;               // Offset:   64 Size:    12 [unused]
//   row_major float4x4 u_mtxLightWP;   // Offset:   80 Size:    64 [unused]
//   row_major float4x4 u_mtxCascadeWP[3];// Offset:  144 Size:   192 [unused]
//   row_major float3x4 u_mtxLightSphere;// Offset:  336 Size:    48 [unused]
//   row_major float3x4 u_mtxLightHalfSphere;// Offset:  384 Size:    48 [unused]
//   float3 u_mapLightDir[3];           // Offset:  432 Size:    44 [unused]
//   float4 u_mapLightColor[3];         // Offset:  480 Size:    48 [unused]
//   float3 u_mapLightIntensity;        // Offset:  528 Size:    12 [unused]
//   float4 u_mapLightTexParam;         // Offset:  544 Size:    16 [unused]
//   float4 u_cloudParam;               // Offset:  560 Size:    16 [unused]
//   float4 u_windParam;                // Offset:  576 Size:    16 [unused]
//   float4 u_cloudTime;                // Offset:  592 Size:    16 [unused]
//   float4 u_waterParam0;              // Offset:  608 Size:    16 [unused]
//   float4 u_waterParam1;              // Offset:  624 Size:    16 [unused]
//   float3 u_lightAimbient;            // Offset:  640 Size:    12 [unused]
//   float3 u_mapShadowBias;            // Offset:  656 Size:    12 [unused]
//   float4 u_mapGimmickColor;          // Offset:  672 Size:    16 [unused]
//   float4 u_softParticleParam;        // Offset:  688 Size:    16
//   float4 u_effectLightParam;         // Offset:  704 Size:    16 [unused]
//   float4 u_effectShadowParam;        // Offset:  720 Size:    16 [unused]
//   float4 u_powerVelocitySize;        // Offset:  736 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBUSE_UB_LOCAL_MATRIX_IDX         cbuffer      NA          NA            cb2      1
// CBUSE_UB_MODEL_MATERIAL_IDX       cbuffer      NA          NA            cb3      1
// CBUSE_UB_LIGHT_IDX                cbuffer      NA          NA            cb6      1
// CBUSE_UB_SHADER_PARAM_IDX         cbuffer      NA          NA            cb7      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 5   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 6   xyzw        3     NONE   float   xyzw
// TEXCOORD                 9   xyzw        4     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB2[12], immediateIndexed
dcl_constantbuffer CB3[6], immediateIndexed
dcl_constantbuffer CB7[1], immediateIndexed
dcl_constantbuffer CB6[44], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 2
dp4 r0.x, cb2[8].xyzw, v0.xyzw
mov o0.x, r0.x
dp4 r1.y, cb2[9].xyzw, v0.xyzw
dp4 r1.z, cb2[10].xyzw, v0.xyzw
dp4 r1.w, cb2[11].xyzw, v0.xyzw
mov o0.yzw, r1.yyzw
mov r0.y, -r1.y
add r0.xy, r0.xyxx, r1.wwww
mov o4.zw, r1.zzzw
mul o4.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r0.x, l(1.000000), cb3[2].x
mul r1.xyzw, v1.xyzw, cb3[1].xyzw
mul o1.xyz, r0.xxxx, r1.xyzx
mov o1.w, r1.w
mov o2.zw, l(0,0,0,0)
mov r0.xy, v2.xyxx
mov r0.z, l(1.000000)
dp3 o2.x, cb3[4].xyzx, r0.xyzx
dp3 o2.y, cb3[5].xyzx, r0.xyzx
mul r0.x, cb7[0].y, cb7[0].y
min r0.x, r0.x, l(1.000000)
mad r0.x, r0.x, -cb6[43].x, cb6[43].x
add r0.y, -r0.x, cb6[43].x
mad o3.w, cb7[0].z, r0.y, r0.x
mov o3.z, r0.x
mov o3.x, cb3[0].w
mov o3.y, cb7[0].x
ret
// Approximately 28 instruction slots used
