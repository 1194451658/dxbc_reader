//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer GlobalVS
// {
//
//   float4x4 ViewProjVS;               // Offset:    0 Size:    64 [unused]
//   float4 CameraPosVS;                // Offset:   64 Size:    16
//   float4 CameraInfoVS;               // Offset:   80 Size:    16 [unused]
//   float4x4 LightViewProjTex;         // Offset:   96 Size:    64
//   float4 ScreenInfoVS;               // Offset:  160 Size:    16 [unused]
//   float4 FogInfo;                    // Offset:  176 Size:    16
//   float4 FogColorVS;                 // Offset:  192 Size:    16
//   float4 PlayerPos;                  // Offset:  208 Size:    16 [unused]
//   float4 SunDirectionVS;             // Offset:  224 Size:    16 [unused]
//
// }
//
// cbuffer Batch
// {
//
//   float4x3 World;                    // Offset:    0 Size:    48
//   float4 cTintColor1;                // Offset:   48 Size:    16 [unused]
//   float4 cTintColor2;                // Offset:   64 Size:    16 [unused]
//   float4 cTintColor3;                // Offset:   80 Size:    16 [unused]
//   float4 cShadowBias;                // Offset:   96 Size:    16 [unused]
//   float4 cPointCloud[6];             // Offset:  112 Size:    96 [unused]
//   float4 cParamter;                  // Offset:  208 Size:    16 [unused]
//   float4 cParamter2;                 // Offset:  224 Size:    16 [unused]
//   float4 cVirtualLitDir;             // Offset:  240 Size:    16 [unused]
//   float4 cVirtualLitColor;           // Offset:  256 Size:    16 [unused]
//   float4x4 WorldViewProj;            // Offset:  272 Size:    64
//   float4x4 LastWorldViewProjTex;     // Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer Shader
// {
//
//   float cAliasingFactor;             // Offset:    0 Size:     4 [unused]
//   float cEnvStrength;                // Offset:    4 Size:     4 [unused]
//   float cRoughnessLow;               // Offset:    8 Size:     4 [unused]
//   float cRoughnessHigh;              // Offset:   12 Size:     4 [unused]
//   float cBloomScale;                 // Offset:   16 Size:     4 [unused]
//   float cMetallic;                   // Offset:   20 Size:     4 [unused]
//   float cSmoothness;                 // Offset:   24 Size:     4 [unused]
//   float cFlowPeriod;                 // Offset:   28 Size:     4 [unused]
//   float cBlendSharpness;             // Offset:   32 Size:     4 [unused]
//   float4 cBlockScale;                // Offset:   48 Size:    16
//   float4 cBlockShrinkage;            // Offset:   64 Size:    16 [unused]
//   float4 cLightMapScale;             // Offset:   80 Size:    16 [unused]
//   float4 cLightMapUVTransform;       // Offset:   96 Size:    16
//   float4 cOverlayMapUVTransform;     // Offset:  112 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Batch                             cbuffer      NA          NA            cb0      1
// Shader                            cbuffer      NA          NA            cb1      1
// GlobalVS                          cbuffer      NA          NA            cb2      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// NORMAL                   0   xyzw        1     NONE   float   xyz
// TEXCOORD                 0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB2[13], immediateIndexed
dcl_constantbuffer CB0[21], immediateIndexed
dcl_constantbuffer CB1[7], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_temps 4
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 o0.x, r0.xyzw, cb0[17].xyzw
dp4 o0.y, r0.xyzw, cb0[18].xyzw
dp4 o0.z, r0.xyzw, cb0[19].xyzw
dp4 o0.w, r0.xyzw, cb0[20].xyzw
mad o1.zw, v2.xxxy, cb1[6].xxxy, cb1[6].zzzw
mov o1.xy, v2.xyxx
add r1.x, l(-300.000000), cb2[4].y
mul r1.x, r1.x, l(500.000000)
max o2.w, r1.x, l(0.000000)
dp4 r1.x, r0.xyzw, cb0[0].xyzw
dp4 r1.y, r0.xyzw, cb0[1].xyzw
dp4 r1.z, r0.xyzw, cb0[2].xyzw
mov o2.xyz, r1.xyzx
mov o3.w, l(0)
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.x, r0.xyzx, cb0[0].xyzx
dp3 r2.y, r0.xyzx, cb0[1].xyzx
dp3 r2.z, r0.xyzx, cb0[2].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r2.xyzx
mov o3.xyz, r0.xyzx
mov o4.w, l(0)
add r2.xyz, r1.xyzx, -cb2[4].xyzx
mov o4.xyz, r2.xyzx
mul r0.w, r2.y, -cb2[11].z
mul r0.w, r0.w, l(1.442695)
exp r0.w, r0.w
add r0.w, -r0.w, l(1.000000)
mul r2.w, r2.y, cb2[11].z
div r0.w, r0.w, r2.w
mul r0.w, r0.w, cb2[11].w
lt r2.w, l(0.001000), |r2.y|
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, r2.x, -cb2[11].x
max r2.x, r2.x, l(0.000000)
movc r0.w, r2.w, r0.w, cb2[11].w
mul r0.w, r0.w, l(0.020000)
mul r0.w, r0.w, -r2.x
mul r0.w, r0.w, l(1.442695)
exp r0.w, r0.w
add r2.x, l(0.999000), -cb2[12].w
mad o5.w, r0.w, r2.x, cb2[12].w
mov o5.xyz, l(0,0,0,0)
mul r2.xyz, r0.zxyz, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r2.xyz, r0.yzxy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyzx
dp2 r0.w, r2.xyxx, r2.xyxx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mov o6.xyz, r2.xyzx
mul r3.xy, cb2[4].xzxx, cb1[3].xxxx
frc r3.xy, r3.xyxx
mov o6.w, r3.x
mov o7.w, r3.y
mul r3.xyz, r0.zxyz, r2.yzxy
mad o7.xyz, r0.yzxy, r2.zxyz, -r3.xyzx
mov r1.w, l(1.000000)
dp4 o8.x, r1.xyzw, cb2[6].xyzw
dp4 o8.y, r1.xyzw, cb2[7].xyzw
dp4 o8.z, r1.xyzw, cb2[8].xyzw
dp4 o8.w, r1.xyzw, cb2[9].xyzw
ret
// Approximately 65 instruction slots used